################################################################################
# SciTE user configuration file
#
# This is supposed to work on GNU/Linux (GTK+) as well as on Windows systems
################################################################################

if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=$(scale 576)
position.height=$(scale 740)

line.margin.width=4
margin.width=$(scale 16)
fold.margin.width=$(scale 14)

split.vertical=1
tabbar.visible=1

phases.draw=1
if PLAT_WIN
	technology=3

if PLAT_GTK
	strip.button.height=24


are.you.sure=1
default.file.ext=.py

buffers=100
if PLAT_GTK
	background.save.size=10000000


# Status Bar
statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\SciTEDoc.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.scite.help=xdg-open "file://$(SciteDefaultHome)/SciTEDoc.html"

# Internationalisation
# Japanese input code page 932 and ShiftJIS character set 128
#code.page=932
#character.set=128
# Unicode
code.page=65001
#character.set=204
#command.discover.properties=python /home/user/FileDetect.py "$(FilePath)"
# Required for Unicode to work on GTK+:
#LC_CTYPE=en_US.UTF-8
if PLAT_GTK
	output.code.page=65001
if PLAT_MAC
	output.code.page=65001
#ime.interaction=1
#ime.autocomplete=1


# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=姎寽�类玲骡勉匿佩奇晴辱砷赎穗天晚晤巷叙疡因芋贼挣重�
# This is a better set for Russian:
#chars.accented=类玲骡勉匿佩ǜ奇晴辱砷赎穗天晚晤巷叙疡因芋贼挣嘱作伉蠃邡埯茳蔟撖�

source.files=$(star *source.patterns.)
source.all.filter=All Source|$(source.files)|

# Each platform has a different idea of the most important filters
if PLAT_WIN
	all.files=All Files (*.*)|*.*|
	top.filters=$(source.all.filter)$(all.files)
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
	top.filters=$(source.all.filter)$(all.files)
# As OS X only greys out filtered files, show all as default
if PLAT_MAC
	all.files=All Files (*.*)|*.*|
	top.filters=$(all.files)$(source.all.filter)

# Gather all settings with "*filter." prefix from all active .properties files
list.filters=$(star *filter.)

open.filter=$(top.filters)$(list.filters)

#save.filter=$(open.filter)

# Printing
#print.colour.mode=1
print.magnification=-1
# Windows-only setup: left, right, top, bottom margins, in local units:
# hundredths of millimeters or thousandths of inches
print.margins=1500,1000,1000,1500
# Header/footer:
print.header.format=$(FileNameExt) -- Printed on $(CurrentDate), $(CurrentTime) -- Page $(CurrentPage)
print.footer.format=$(FilePath) -- File date: $(FileDate) -- File time: $(FileTime)

# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.

keyText=Shift+F11
keyMake=Ctrl+Shift+F11
keyHTML=F12
keyXML=Shift+F12
# On OS X, F11 is used by Expose, F12 by Dashbard
if PLAT_MAC
	os.x.home.end.keys=1
	keyText=Shift+F13
	keyMake=Ctrl+Shift+F13
	keyHTML=Ctrl+Shift+F14
	keyXML=Shift+F14

# Gather all settings with "*language." prefix from all active .properties files
menu.language=$(star *language.)

# User defined key commands
user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|

#KeypadPlus|IDM_EXPAND|\
#KeypadMinus|IDM_BLOCK_COMMENT|

#user.context.menu=\
#||\
#Next File|IDM_NEXTFILE|\
#Prev File|IDM_PREVFILE|



#-------------------------------------------------------------------------------
# general paths
custom.scite.subuserhome=$(SciteUserHome)/.scite/custom
custom.scite.apifilesdir=$(custom.scite.subuserhome)/api
custom.scite.extdir=$(custom.scite.subuserhome)/ext
custom.scite.abbrevdir=$(custom.scite.subuserhome)/abbrev
custom.scite.lexerdir=$(custom.scite.subuserhome)/lex

#-------------------------------------------------------------------------------
# general UI
pathbar.visible=1
horizontal.scrollbar=1
toolbar.visible=1
toolbar.usestockicons=1
statusbar.visible=1
buffered.draw=1
tabbar.multiline=1
toolbar.visible=1
find.close.on.find=0
find.in.files.close.on.find=0
find.use.strip=0
replace.use.strip=0
find.strip.incremental=1
find.replace.wrap=1
find.replacewith.focus=1
find.replace.advanced=1

if PLAT_GTK
    fileselector.show.hidden=1

#-------------------------------------------------------------------------------
# general behaviour
load.on.activate=1
check.if.already.open=1
backspace.unindents=0

#-------------------------------------------------------------------------------
# general settings
code.page=65001

#-------------------------------------------------------------------------------
# exit and startup behaviour
save.session=1
session.bookmarks=1
session.folds=1
save.recent=1
save.position=1
save.find=1

#-------------------------------------------------------------------------------
# editor-UI and behaviour
line.margin.visible=1

caret.additional.blinks=0

edge.column=150
edge.mode=1

virtual.space=1
rectangular.selection.modifier=4

highlight.current.word=1
# highlight.current.word.colour=#49a80b
indicators.alpha=93
indicators.under=1

indent.maintain.*=1
indent.auto=1
indent.automatic=1
tabsize=4
use.tabs=0
indent.size=4
eol.mode=LF
strip.trailing.spaces.*=1
view.indentation.guides=3
highlight.indentation.guides=1
braces.check=1
braces.sloppy=1

top.filters=$(all.files)All Source|$(source.files)|

#-------------------------------------------------------------------------------
# line-wrapping
wrap=0
wrap.style=2
wrap.visual.flags=3
cache.layout=3

#-------------------------------------------------------------------------------😀😃😄😁😆😅😂🤣🥲️😊😇🙂🙃😉😌😍🥰😘😗🧞‍♀️
# fonts
font.quality=3
if PLAT_WIN
    font.quality=1
# font.base=font:ProggyTinyTTSZ,size:12
# font.base=font:ProggyTinyTTSZ NFM,size:12
# font.base=font:Cozette Vector,size:9
font.base=font:Cozette Vector NF,size:9
font.*=$(font.base)
font.mono=$(font.base)
font.text=$(font.base)
font.small=$(font.base)
font.comment=$(font.base)
font.code.comment.box=$(font.base)
font.code.comment.line=$(font.base)
font.code.comment.doc=$(font.base)
font.code.comment.nested=$(font.base)
font.monospace=$(font.base)
font.monospaced.list=ProggyTinyTTSZ;ProggyTinyTTSZ NFM;Cozette Vector NF

#-------------------------------------------------------------------------------
# autocompletion and calltips settings
autocomplete.*.start.characters=._$(chars.alpha)
autocomplete.*.word.characters=._$(chars.alpha)

calltip.*.word.characters=._$(chars.alpha)

#-------------------------------------------------------------------------------
# language api support

# basic C api-files
custom.api.c=\
$(custom.scite.apifilesdir)/c_std.api;\
$(custom.scite.apifilesdir)/c_opengl.api;\
$(custom.scite.apifilesdir)/c_sdl.api
if PLAT_WIN
    custom.api.c=$(custom.api.c);$(custom.scite.apifilesdir)/c_wnds.api

# C/C++ api support
api.*.c=$(custom.api.c)
api.*.cc=$(custom.api.c)
custom.api.cxx=$(custom.api.c)
custom.api.cpp=$(custom.api.c)
custom.api.c++=$(custom.api.c)

api.*.h=$(custom.api.c)
custom.api.ch=$(custom.api.c)
custom.api.cpp=$(custom.api.c)
custom.api.cxx=$(custom.api.c)
custom.api.c++=$(custom.api.c)
# basic Pascal/Delphi api-files
custom.api.pascal=$(custom.scite.apifilesdir)/pascal_std.api
# Pascal/Delphi api support
api.*.pas=$(custom.api.pascal)
api.*.inc=$(api.*.pas)
api.*.dpr=$(api.*.pas)
# CMake api support
api.*.cmake=$(custom.scite.apifilesdir)/cmake.api
# Java api support
api.*.java=$(custom.scite.apifilesdir)/java_std.api
# Lua api support
api.*.lua=$(custom.scite.apifilesdir)/lua_scite.api
# Perl api support
api.*.pl=$(custom.scite.apifilesdir)/perl_std.api
# PHP api support
api.*.php=$(custom.scite.apifilesdir)/php_std.api
# Codeblock api support
api.*.dwp=$(custom.scite.apifilesdir)/codeblock_std.api

#-------------------------------------------------------------------------------
# language specific settings

# Delphi/Pascal
indent.size.$(file.patterns.pascal.all)=4

# BATCH
comment.block.batch=:: ~

# Makefile
# tab-character must be enabled in makefiles
use.tabs.$(file.patterns.make)=1

# Lua
# execute lua file with builtin SciTE lua interpreter
command.name.1.$(file.patterns.lua)=Execute Lua Script
command.subsystem.1.$(file.patterns.lua)=4
command.1.$(file.patterns.lua)=dofile $(FilePath)

# CSS
use.tabs.*.css=0

# Ruby
indent.size.$(file.patterns.rb)=4

# XML/HTML
indent.size.$(file.patterns.xml)=2
indent.size.$(file.patterns.html)=2
comment.stream.start.xml=<!--
comment.stream.end.xml=-->


#-------------------------------------------------------------------------------
# windows only settings
open.dialog.in.file.directory=1

#-------------------------------------------------------------------------------
# lua extensions

# Lua startup script: comment the following line to disable lua extensions
#ext.lua.startup.script=$(custom.scite.extdir)/startup.lua
# enable/disable additional debug messages in the output pane
#custom.ext.debugmode=off

# enable custom lexers
#custom.ext.loadlexers=on
#custom.ext.lexers=$(custom.lexer.codeblock);

#custom.ext.extensions.debugger=off
#custom.ext.extensions.debugger.dir=debugger
ext.lua.auto.reload=1

#-------------------------------------------------------------------------------
# color themes
import .scite/custom/themes
import .scite/custom/languages
#import .scite/custom/themes/dark
# import .scite/custom/themes/bootstrap
# import .scite/themes/green
# import .scite/themes/white


# My style overrides
style.bash.8=$(tstyle.default)
style.python.14=$(tstyle.embed)
style.python.20=$(tstyle.support)
style.yaml.2=$(tstyle.class)

# Follow theme colour or set your own
# edge.colour=$(tcolour.edge)
edge.colour=#c40000
style.*.35=#c40000


#******************User defined hot key commands*****************
# https://www.scintilla.org/CommandValues.html
# http://the-automator.com/tag/scite-keyboard-shortcuts-hotkeys/
user.shortcuts=Ctrl+Alt+c|IDM_COPYASRTF|\
Ctrl+F1|IDM_HELP_SCITE|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|\
Ctrl+t|IDM_TOGGLEOUTPUT|\
Ctrl+Shift+t|IDM_SHOWCALLTIP|\
Ctrl+Shift+u|IDM_OPENUSERPROPERTIES|\
Ctrl+Escape|IDM_STOPEXECUTE|\
F3|IDM_FIND|\
F4|IDM_FINDNEXT|\
Ctrl+Shift+g|IDM_GOTO|\
Ctrl+Shift+Up|2620|\
Ctrl+Shift+Down|2621|\
Ctrl+Shift+Left|2440|\
Ctrl+Shift+Right|2442|\
Alt+Backspace|2335|\
Alt+Delete|2336|\
Ctrl+Shift+PageUp|IDM_MOVETABLEFT|\
Ctrl+Shift+PageDown|IDM_MOVETABRIGHT|\
##################All comments need to be at end
#*****************User hotkeys end**************************************





