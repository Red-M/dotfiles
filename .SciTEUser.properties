################################################################################
# SciTE user configuration file
#
# This is supposed to work on GNU/Linux (GTK+) as well as on Windows systems
################################################################################

#-------------------------------------------------------------------------------
# general paths
custom.scite.subuserhome=$(SciteUserHome)/.scite/custom
custom.scite.apifilesdir=$(custom.scite.subuserhome)/api
custom.scite.extdir=$(custom.scite.subuserhome)/ext
custom.scite.abbrevdir=$(custom.scite.subuserhome)/abbrev
custom.scite.lexerdir=$(custom.scite.subuserhome)/lex

#-------------------------------------------------------------------------------
# general UI
pathbar.visible=1
horizontal.scrollbar=1
toolbar.visible=1
toolbar.usestockicons=1
statusbar.visible=1
buffered.draw=1
tabbar.multiline=1
toolbar.visible=1
find.close.on.find=0
find.in.files.close.on.find=0
find.use.strip=0
replace.use.strip=0
find.strip.incremental=1
find.replace.wrap=1
find.replacewith.focus=1
find.replace.advanced=1

if PLAT_GTK
    fileselector.show.hidden=1

#-------------------------------------------------------------------------------
# general behaviour
load.on.activate=1
check.if.already.open=1
backspace.unindents=0

#-------------------------------------------------------------------------------
# general settings
code.page=65001

#-------------------------------------------------------------------------------
# exit and startup behaviour
save.session=1
session.bookmarks=1
session.folds=1
save.recent=1
save.position=1
save.find=1

#-------------------------------------------------------------------------------
# editor-UI and behaviour
line.margin.visible=1

caret.additional.blinks=0
caret.line.back=#E8E8FF

edge.column=80
edge.mode=1
edge.colour=#c40000

virtual.space=1
rectangular.selection.modifier=4

highlight.current.word=1
highlight.current.word.colour=#49a80b
indicators.alpha=93
indicators.under=1

indent.maintain.*=1
indent.auto=1
indent.automatic=1
tabsize=4
use.tabs=0
indent.size=4
eol.mode=LF

strip.trailing.spaces.*=1

top.filters=$(all.files)All Source|$(source.files)|

#-------------------------------------------------------------------------------
# line-wrapping
wrap=0
wrap.style=2
wrap.visual.flags=3
cache.layout=3

#-------------------------------------------------------------------------------
# fonts

# always use monospace fonts
# the Hack font is required on both GNU/Linux and Windows platforms!
# get the Hack font from https://sourcefoundry.org/hack/
font.quality=1
font.base=font:ProggyTinyTTSZ,size:12
font.*=$(font.base)
font.mono=$(font.base)
font.text=$(font.base)
font.small=$(font.base)
font.comment=$(font.base)
font.code.comment.box=$(font.base)
font.code.comment.line=$(font.base)
font.code.comment.doc=$(font.base)
font.code.comment.nested=$(font.base)
font.monospace=$(font.base)

#-------------------------------------------------------------------------------
# autocompletion and calltips settings
autocomplete.*.start.characters=._$(chars.alpha)
autocomplete.*.word.characters=._$(chars.alpha)

calltip.*.word.characters=._$(chars.alpha)

#-------------------------------------------------------------------------------
# language api support

# basic C api-files
custom.api.c=\
$(custom.scite.apifilesdir)/c_std.api;\
$(custom.scite.apifilesdir)/c_opengl.api;\
$(custom.scite.apifilesdir)/c_sdl.api
if PLAT_WIN
    custom.api.c=$custom.api.c;$(custom.scite.apifilesdir)/c_wnds.api

# C/C++ api support
api.*.c=$(custom.api.c)
api.*.cc=$(api.*.c)
api.*.cxx=$(api.*.c)
api.*.cpp=$(api.*.c)
api.*.c++=$(api.*.c)
api.*.h=$(custom.api.c)
api.*.hh=$(api.*.h)
api.*.hpp=$(api.*.h)
api.*.hxx=$(api.*.h)
api.*.h++=$(api.*.h)
# basic Pascal/Delphi api-files
custom.api.pascal=$(custom.scite.apifilesdir)/pascal_std.api
# Pascal/Delphi api support
api.*.pas=$(custom.api.pascal)
api.*.inc=$(api.*.pas)
api.*.dpr=$(api.*.pas)
# CMake api support
api.*.cmake=$(custom.scite.apifilesdir)/cmake.api
# Java api support
api.*.java=$(custom.scite.apifilesdir)/java_std.api
# Lua api support
api.*.lua=$(custom.scite.apifilesdir)/lua_scite.api
# Perl api support
api.*.pl=$(custom.scite.apifilesdir)/perl_std.api
# PHP api support
api.*.php=$(custom.scite.apifilesdir)/php_std.api
# Codeblock api support
api.*.dwp=$(custom.scite.apifilesdir)/codeblock_std.api

#-------------------------------------------------------------------------------
# language specific settings

# Codeblock
import .scite/lex/codeblock
custom.lexer.codeblock=$(custom.scite.lexerdir)/codeblock.lexer.lua
abbreviations.$(file.patterns.codeblock)=$(custom.scite.abbrevdir)/codeblock.abbrev

# C / C++
command.name.1.$(file.patterns.cpp)=Swap C Header / Source
command.1.$(file.patterns.cpp)=dofile $(custom.scite.extdir)/commands/swap_header.command.lua
command.subsystem.1.$(file.patterns.cpp)=3
command.mode.1.$(file.patterns.cpp)=savebefore:no
command.shortcut.1.$(file.patterns.cpp)=F4
abbreviations.$(file.patterns.cpp)=$(custom.scite.abbrevdir)/cpp.abbrev

# Delphi/Pascal
indent.size.$(file.patterns.pascal.all)=3

# BATCH
comment.block.batch=:: ~

# Makefile
# tab-character must be enabled in makefiles
use.tabs.$(file.patterns.make)=1

# Lua
# bold keywords
style.lua.5=$(colour.keyword)
# execute lua file with builtin SciTE lua interpreter
command.name.1.$(file.patterns.lua)=Execute Lua Script
command.subsystem.1.$(file.patterns.lua)=3
command.1.$(file.patterns.lua)=dofile $(FilePath)

# CSS
use.tabs.*.css=0

# Ruby
indent.size.$(file.patterns.rb)=3

# XML/HTML
indent.size.$(file.patterns.xml)=2
indent.size.$(file.patterns.html)=2
comment.stream.start.xml=<!--
comment.stream.end.xml=-->


#-------------------------------------------------------------------------------
# windows only settings
open.dialog.in.file.directory=1

#-------------------------------------------------------------------------------
# lua extensions

# Lua startup script: comment the following line to disable lua extensions
#ext.lua.startup.script=$(custom.scite.extdir)/startup.lua
# enable/disable additional debug messages in the output pane
custom.ext.debugmode=off

# enable custom lexers
custom.ext.loadlexers=on
custom.ext.lexers=$(custom.lexer.codeblock);

custom.ext.extensions.debugger=off
custom.ext.extensions.debugger.dir=debugger

#-------------------------------------------------------------------------------
# color themes
import .scite/custom/themes/dark
import .scite/custom/themes/bootstrap
# import .scite/themes/green
# import .scite/themes/white










#******************User defined hot key commands*****************
# https://www.scintilla.org/CommandValues.html
# http://the-automator.com/tag/scite-keyboard-shortcuts-hotkeys/
user.shortcuts=Ctrl+Alt+c|IDM_COPYASRTF|\
Ctrl+F1|IDM_HELP_SCITE|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|\
Ctrl+t|IDM_TOGGLEOUTPUT|\
Ctrl+Shift+t|IDM_SHOWCALLTIP|\
Ctrl+Shift+u|IDM_OPENUSERPROPERTIES|\
Ctrl+Escape|IDM_STOPEXECUTE|\
F3|IDM_FIND|\
F4|IDM_FINDNEXT|\
Ctrl+Shift+g|IDM_GOTO|\
Ctrl+Shift+Up|2620|\
Ctrl+Shift+Down|2621|\
Ctrl+Shift+Left|2440|\
Ctrl+Shift+Right|2442|\
Alt+Backspace|2335|\
Alt+Delete|2336|\
Ctrl+Shift+PageUp|IDM_MOVETABLEFT|\
Ctrl+Shift+PageDown|IDM_MOVETABRIGHT|\
##################All comments need to be at end
#*****************User hotkeys end**************************************














