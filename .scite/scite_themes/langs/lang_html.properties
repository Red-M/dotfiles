# HTML and XML share lexing code so use the same style numbers
# Hypertext Markup Language

embed_base=$(tstyle.base_ln),eolfilled

# Text
style.hypertext.0=$(tstyle.default)
# Tags
style.hypertext.1=$(tstyle.keyword)
# Unknown Tags
style.hypertext.2=$(tstyle.support)
# Attributes
style.hypertext.3=$(tstyle.class)
# Unknown Attributes
style.hypertext.4=$(tstyle.support)
# Numbers
style.hypertext.5=$(tstyle.number)
# Double quoted strings
style.hypertext.6=$(tstyle.string.double)
# Single quoted strings
style.hypertext.7=$(tstyle.string.single)
# Other inside tag
style.hypertext.8=$(tstyle.support)
# Comment
style.hypertext.9=$(tstyle.comment.box)
# Entities
style.hypertext.10=$(tstyle.variable)
# XML style tag ends '/>'
style.hypertext.11=$(tstyle.delimiter)
# XML identifier start '<?'
style.hypertext.12=$(tstyle.delimiter)
# XML identifier end '?>'
style.hypertext.13=$(tstyle.delimiter)
#  SCRIPT
style.hypertext.14=$(tstyle.delimiter)
# ASP <% ... %>
style.hypertext.15=fore:$(tcolor.embed),$(embed_base)
# ASP <% ... %>
style.hypertext.16=fore:$(tcolor.embed),$(embed_base)
# CDATA
style.hypertext.17=fore:$(tcolor.embed),$(embed_base)
# PHP
style.hypertext.18=fore:$(tcolor.embed),$(embed_base)
# Unquoted values
style.hypertext.19=fore:$(tcolor.embed),$(embed_base)
# JSP Comment <%-- ... --%>
style.hypertext.20=fore:$(tcolor.comment.box),$(embed_base)
# SGML tags <! ... >
style.hypertext.21=fore:$(tcolor.embed),$(embed_base)
# SGML command
style.hypertext.22=fore:$(tcolor.function),$(embed_base)
# SGML 1st param
style.hypertext.23=fore:$(tcolor.keyword),$(embed_base)
# SGML double string
style.hypertext.24=fore:$(tcolor.string.double),$(embed_base)
# SGML single string
style.hypertext.25=fore:$(tcolor.string.single),$(embed_base)
# SGML error
style.hypertext.26=fore:$(tcolor.error),$(embed_base)
# SGML special (#xxxx type)
style.hypertext.27=fore:$(tcolor.variable),$(embed_base)
# SGML entity
style.hypertext.28=fore:$(tcolor.class),$(embed_base)
# SGML comment
style.hypertext.29=fore:$(tcolor.comment.line),$(embed_base)
# SGML first parameter - lexer internal. It is an error if any text is in this style.
style.hypertext.30=$(tstyle.error)
# SGML block
style.hypertext.31=fore:$(tcolor.comment.box),$(embed_base)
# Some reasonable background colours found in the default Windows palette
# Off White #FFFBF0    Light green #C0DCC0    Light Blue #A6CAF0
# Matched Operators
style.hypertext.34=fore:$(tcolor.match),$(embed_base)
style.hypertext.35=fore:$(tcolor.error),$(embed_base)

# Embedded Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.40=fore:$(tcolor.fore)
# JS Default
style.hypertext.41=fore:$(tcolor.fore),$(embed_base)
# JS Comment
style.hypertext.42=fore:$(tcolor.comment.box),$(embed_base)
# JS Line Comment
style.hypertext.43=fore:$(tcolor.comment.line),$(embed_base)
# JS Doc comment
style.hypertext.44=fore:$(tcolor.comment.doc),$(embed_base)
# JS Number
style.hypertext.45=fore:$(tcolor.number),$(embed_base)
# JS Word
style.hypertext.46=fore:$(tcolor.fore),$(embed_base)
# JS Keyword
style.hypertext.47=fore:$(tcolor.keyword),$(embed_base)
# JS Double quoted string
style.hypertext.48=fore:$(tcolor.string.double),$(embed_base)
# JS Single quoted string
style.hypertext.49=fore:$(tcolor.string.single),$(embed_base)
# JS Symbols
style.hypertext.50=fore:$(tcolor.operator),$(embed_base)
# JavaScript EOL
style.hypertext.51=fore:$(tcolor.match),$(embed_base)
# JavaScript RegEx
style.hypertext.52=fore:$(tcolor.string.regex),$(embed_base)

# ASP Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.55=fore:$(tcolor.fore)
# JS Default
style.hypertext.56=fore:$(tcolor.fore),$(embed_base)
# JS Comment
style.hypertext.57=fore:$(tcolor.comment.box),$(embed_base)
# JS Line Comment
style.hypertext.58=fore:$(tcolor.comment.line),$(embed_base)
# JS Doc comment
style.hypertext.59=fore:$(tcolor.comment.doc),$(embed_base)
# JS Number
style.hypertext.60=fore:$(tcolor.number),$(embed_base)
# JS Word
style.hypertext.61=fore:$(tcolor.fore),$(embed_base)
# JS Keyword
style.hypertext.62=fore:$(tcolor.keyword),$(embed_base)
# JS Double quoted string
style.hypertext.63=fore:$(tcolor.string.double),$(embed_base)
# JS Single quoted string
style.hypertext.64=fore:$(tcolor.string.single),$(embed_base)
# JS Symbols
style.hypertext.65=fore:$(tcolor.operator),$(embed_base)
# JavaScript EOL
style.hypertext.66=fore:$(tcolor.match),$(embed_base)
# JavaScript RegEx
style.hypertext.67=fore:$(tcolor.string.regex),$(embed_base)

# Embedded VBS
# Start
style.hypertext.70=
# Default
style.hypertext.71=fore:$(tcolor.fore),$(embed_base)
# Comment
style.hypertext.72=fore:$(tcolor.comment),$(embed_base)
# Number
style.hypertext.73=fore:$(tcolor.number),$(embed_base)
# KeyWord
style.hypertext.74=fore:$(tcolor.keyword),$(embed_base)
# String
style.hypertext.75=fore:$(tcolor.string.double),$(embed_base)
# Identifier
style.hypertext.76=fore:$(tcolor.fore),$(embed_base)
# Unterminated string
style.hypertext.77=$(tstyle.mismatch)

# ASP VBS
# Start
style.hypertext.80=
# Default
style.hypertext.81=fore:$(tcolor.fore),$(embed_base)
# Comment
style.hypertext.82=fore:$(tcolor.comment),$(embed_base)
# Number
style.hypertext.83=fore:$(tcolor.number),$(embed_base)
# KeyWord
style.hypertext.84=fore:$(tcolor.keyword),$(embed_base)
# String
style.hypertext.85=fore:$(tcolor.string.double),$(embed_base)
# Identifier
style.hypertext.86=fore:$(tcolor.fore),$(embed_base)
# Unterminated string
style.hypertext.87=$(tstyle.mismatch)

# Embedded Python
style.hypertext.90=fore:$(tcolor.fore)
style.hypertext.91=fore:$(tcolor.fore),$(embed_base)
# Comment
style.hypertext.92=fore:$(tcolor.comment.line),$(embed_base)
# Number
style.hypertext.93=fore:$(tcolor.number),$(embed_base)
# String
style.hypertext.94=fore:$(tcolor.string.double),$(embed_base)
# Single quoted string
style.hypertext.95=fore:$(tcolor.string.single),$(embed_base)
# Keyword
style.hypertext.96=fore:$(tcolor.keyword),$(embed_base)
# Triple quotes
style.hypertext.97=fore:$(tcolor.string.other),$(embed_base)
# Triple double quotes
style.hypertext.98=fore:$(tcolor.string.other),$(embed_base)
# Class name definition
style.hypertext.99=fore:$(tcolor.class),$(embed_base)
# Function or method name definition
style.hypertext.100=fore:$(tcolor.function),$(embed_base)
# Operators
style.hypertext.101=fore:$(tcolor.operator),$(embed_base)
# Identifiers
style.hypertext.102=fore:$(tcolor.fore),$(embed_base)

# PHP complex variable
style.hypertext.104=fore:$(tcolor.variable),$(embed_base)

# ASP Python
style.hypertext.105=fore:$(tcolor.fore),$(embed_base)
style.hypertext.106=fore:$(tcolor.fore),$(embed_base)
# Comment
style.hypertext.107=fore:$(tcolor.comment),$(embed_base)
# Number
style.hypertext.108=fore:$(tcolor.number),$(embed_base)
# String
style.hypertext.109=fore:$(tcolor.string.double),$(embed_base)
# Single quoted string
style.hypertext.110=fore:$(tcolor.string.single),$(embed_base)
# Keyword
style.hypertext.111=fore:$(tcolor.keyword),$(embed_base)
# Triple quotes
style.hypertext.112=fore:$(tcolor.string.other),$(embed_base)
# Triple double quotes
style.hypertext.113=fore:$(tcolor.string.other),$(embed_base)
# Class name definition
style.hypertext.114=fore:$(tcolor.class),$(embed_base)
# Function or method name definition
style.hypertext.115=fore:$(tcolor.function),$(embed_base)
# Operators
style.hypertext.116=fore:$(tcolor.operator),$(embed_base)
# Identifiers
style.hypertext.117=fore:$(tcolor.fore),$(embed_base)

# PHP
# Default
style.hypertext.118=fore:$(tcolor.fore),$(embed_base)
# Double quoted String
style.hypertext.119=fore:$(tcolor.string.double),$(embed_base)
# Single quoted string
style.hypertext.120=fore:$(tcolor.string.single),$(embed_base)
# Keyword
style.hypertext.121=fore:$(tcolor.keyword),$(embed_base)
# Number
style.hypertext.122=fore:$(tcolor.number),$(embed_base)
# Variable
style.hypertext.123=fore:$(tcolor.variable),$(embed_base)
# Comment
style.hypertext.124=fore:$(tcolor.comment.box),$(embed_base)
# One line comment
style.hypertext.125=fore:$(tcolor.comment.line),$(embed_base)
# PHP variable in double quoted string
style.hypertext.126=fore:$(tcolor.string.other),$(embed_base)
# PHP operator
style.hypertext.127=fore:$(tcolor.operator),$(embed_base)

# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known

# Default
style.xml.0=$(tstyle.default)
# Tags
style.xml.1=$(tstyle.keyword)
# Unknown Tags
style.xml.2=$(tstyle.support)
# Attributes
style.xml.3=$(tstyle.class)
# Unknown Attributes
style.xml.4=$(tstyle.support)
# Numbers
style.xml.5=$(tstyle.number)
# Double quoted strings
style.xml.6=$(tstyle.string.double)
# Single quoted strings
style.xml.7=$(tstyle.string.single)
# Other inside tag
style.xml.8=$(tstyle.string.other)
# Comment
style.xml.9=$(tstyle.comment.line)
# Entities
style.xml.10=$(tstyle.variable)
# XML style tag ends '/>'
style.xml.11=$(tstyle.delimiter)
# XML identifier start '<?'
style.xml.12=$(tstyle.delimiter)
# XML identifier end '?>'
style.xml.13=$(tstyle.delimiter)
# CDATA
style.xml.17=fore:$(tcolor.embed),$(embed_base)
# Question
style.xml.18=fore:$(tcolor.embed),$(embed_base)
# Unquoted Value
style.xml.19=fore:$(tcolor.embed),$(embed_base)
# SGML tags <! ... >
style.xml.21=fore:$(tcolor.embed),$(embed_base)
# SGML command
style.xml.22=fore:$(tcolor.function),$(embed_base)
# SGML 1st param
style.xml.23=fore:$(tcolor.keyword),$(embed_base)
# SGML double string
style.xml.24=fore:$(tcolor.string.double),$(embed_base)
# SGML single string
style.xml.25=fore:$(tcolor.string.single),$(embed_base)
# SGML error
style.xml.26=fore:$(tcolor.error),$(embed_base)
# SGML special (#xxxx type)
style.xml.27=fore:$(tcolor.variable),$(embed_base)
# SGML entity
style.xml.28=fore:$(tcolor.class),$(embed_base)
# SGML comment
style.xml.29=fore:$(tcolor.comment.line),$(embed_base)
# SGML block
style.xml.31=fore:$(tcolor.comment.box),$(embed_base)
# No brace matching in XML
braces.xml.style=31

